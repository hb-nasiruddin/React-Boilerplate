name: Pre Deploy
on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  linting:
    name: Lint
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node_version: ${{ matrix.node_version }}

      - name: run Install and Lint
        run: |
          npm i # or yarn install
          npm run lint # or yarn lint

  # testing:
  #   if: ${{ always() }}
  #   needs: linting
  #   name: Test
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Use Node.js ${{ matrix.node_version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node_version: ${{ matrix.node_version }}

  #     - name: run Install and Test
  #       run: |
  #         npm i # or yarn install
  #         npm run test # or yarn test

  building:
    if: ${{ always() }}
    needs: [linting]
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node_version: ${{ matrix.node_version }}

      - name: run Install and Build
        run: |
          npm i # or yarn install
          npm run build # or yarn build
  cypress:
    if: ${{ always() }}
    needs: [linting, building]
    name: Cypress Testing
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start
  # cypress-run:
  #   if: ${{ always() }}
  #   needs: [linting, building]
  #   name: Cypress Run
  #   # runs-on: ubuntu-20.04
  #   # strategy:
  #   #   matrix:
  #   #     node-version: [14.x]
  #   # steps:
  #   #   - uses: actions/checkout@v2
  #   #   - name: Use Node.js ${{ matrix.node_version }}
  #   #     uses: actions/setup-node@v2
  #   #     with:
  #   #       node_version: ${{ matrix.node_version }}

  #   #   - name: run Install and Build
  #   #     run: |
  #   #       npm i # or yarn install
  #   #   - name: Cypress run
  #   #     uses: cypress-io/github-action@v2
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cypress tests
  #       uses: ./
  #       with:
  #         build: npm run build
  #         start: npm start
  #         wait-on: 'http://localhost:3000'
  #         config: baseUrl=http://localhost:3000

  amplify:
    if: ${{ always() }}
    needs: [linting, building, cypress]
    name: test amplify-cli-action
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v1

    - name: use node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: configure amplify
      uses: ambientlight/amplify-cli-action@0.3.0
      with:
        amplify_command: configure
        amplify_env: prod
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1

    - name: run Install and Build
      run: |
        npm i # or yarn install
        npm run build # or yarn build

    - name: deploy
      uses: ambientlight/amplify-cli-action@0.3.0
      with:
        amplify_command: publish
        amplify_env: dev
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1